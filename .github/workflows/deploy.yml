name: deploy whatsoverhead to GCP Cloud Run

on:
  push:
    branches:
      - main
      - dev
    paths:
      - whatsoverhead.py
      - .env
      - .env-dev
      - .github/workflows/deploy.yml
      - Dockerfile
      - static/*
      - templates/whatsoverhead.html
      - templates/whatsoverhead_dev.html

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: load environment variables; use .env-dev if on the dev branch
      - name: Load env file
        id: load_env
        working-directory: .
        run: |
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            cat .env-dev >> $GITHUB_ENV
          else
            cat .env >> $GITHUB_ENV
          fi

      # Step 3: auth with GCP
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 4: auth Docker with GCP
      - name: Authenticate Docker
        run: |
          gcloud auth configure-docker gcr.io --quiet

      # Step 5: prepare .env if on dev branch
      - name: Prepare .env if on dev
        working-directory: .
        run: |
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            mv .env-dev .env
          fi

      # Step 6: docker build
      - name: Build Docker image
        working-directory: .
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ENDPOINT }} .

      # Step 7: docker push
      - name: Push Docker image
        working-directory: .
        run: |
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ENDPOINT }}

      # Step 8: deploy
      - name: Deploy to Cloud Run
        run: |
          gcloud beta run deploy ${{ env.ENDPOINT }} \
            --region ${{ env.GCP_REGION }} \
            --image gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ENDPOINT }} \
            --port ${{ env.PORT }} \
            --cpu ${{ env.CLOUDRUN_CPU }} \
            --memory ${{ env.CLOUDRUN_MEMORY }}Gi \
            --max-instances ${{ env.CLOUDRUN_MAXINSTANCES }} \
            --concurrency ${{ env.CLOUDRUN_CONCURRENCY }} \
            --service-account ${{ env.GCP_SERVICE_ACCOUNT }} \
            --platform managed \
            --allow-unauthenticated

# EOF
