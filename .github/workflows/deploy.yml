name: Deploy whatsoverhead to Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - backend/plane_api.py            # Trigger if plane_api.py is changed
      - backend/.env                    # Trigger if .env is changed
      - .github/workflows/deploy.yml    # Trigger if workflow is changed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Load environment variables from .env
      - name: Load environment variables
        id: load_env
        working-directory: backend
        run: |
          cat .env >> $GITHUB_ENV

      # Step 3: Authenticate with GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 4: Authenticate Docker with GCP
      - name: Authenticate Docker
        run: |
          gcloud auth configure-docker --quiet

      # Step 5: Build the Docker image
      - name: Build Docker image
        working-directory: backend
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ENDPOINT }} .

      # Step 6: Push the Docker image
      - name: Push Docker image
        working-directory: backend
        run: |
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ENDPOINT }}

      # Step 7: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud beta run deploy ${{ env.ENDPOINT }} \
            --region ${{ env.CLOUDRUN_REGION }} \
            --image gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ENDPOINT }} \
            --port ${{ env.PORT }} \
            --cpu ${{ env.CLOUDRUN_CPU }} \
            --memory ${{ env.CLOUDRUN_MEMORY }}Gi \
            --max-instances ${{ env.CLOUDRUN_MAXINSTANCES }} \
            --concurrency ${{ env.CLOUDRUN_CONCURRENCY }} \
            --service-account ${{ env.GCP_SERVICE_ACCOUNT }} \
            --platform managed \
            --allow-unauthenticated
